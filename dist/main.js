var Client=function(t){var e={};function n(a){if(e[a])return e[a].exports;var r=e[a]={i:a,l:!1,exports:{}};return t[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=t,n.c=e,n.d=function(t,e,a){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:a})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(a,r,function(e){return t[e]}.bind(null,r));return a},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=1)}([function(t,e,n){},function(t,e,n){"use strict";n.r(e),n.d(e,"submitForm",(function(){return m})),n.d(e,"removeTrip",(function(){return g})),n.d(e,"addTrip",(function(){return y}));n(0);const a="http://127.0.01:8000",r=async t=>{t||alert("You must enter a city");const e=`https://api.weatherbit.io/v2.0/current?city=${t}&key=d3b3314ebbdd44f48c31198b36d11db9`;try{const t=await fetch(e);if(t)return t.json()}catch(t){console.error(t)}},o=async t=>{try{const e=`https://pixabay.com/api/?key=16683047-bf5b77e8ce69745020c843720&q=${t}&image_type=photo&pretty=true&category=places`;return(await fetch(e)).json()}catch(t){console.error(t)}},i=()=>({city:document.getElementById("city").value.toLowerCase(),startDate:document.getElementById("startDate").value.split("-").join("/"),endDate:document.getElementById("endDate").value.split("-").join("/")}),s=()=>{const t=u(),e=document.getElementById("trips__container");e.textContent="";const n=document.createDocumentFragment();for(let e of t){const t=document.createElement("div");t.innerHTML=`\n          <div class="trip-image__container">\n            <img class="trip-image" src="${e.imageURL}" alt="logo">\n          </div>\n          <div class="trip-description__container">\n            <p> <strong>${e.city}</strong>, ${e.country} </p>\n            <p> Trip duration: <strong>${e.duration}</strong> days</p>\n            <p> Departure: <strong>${e.startDate}</strong></p>\n            <p> Return: <strong>${e.endDate}</strong></p>\n\n          <div class="trip-weather__container">\n            <h2>Weather predictions:</h2>\n                        <img class="weather-icon" src="https://www.weatherbit.io/static/img/icons/${e.weather.icon}.png" alt="weather-icon">\n              ${e.weather.temp.toFixed()} °C, ${e.weather.description}\n          </div>\n          <div>\n          <input id="taskInput" placeholder="Place your task here"><br>\n    <input id="taskPriority" placeholder="Place task priority (1-10)"><br>\n    <button id="addTaskButton">Add task</button>\n\n    <ul id="taskList">\n\n    </ul>\n\n    <button id="removeFinishedTasksButton">Remove finished tasks</button>\n      </div>\n          </div>\n          <button id="${e.id}" class="card-button remove-button" onclick="Client.removeTrip(event)">Remove</button>\n       `,t.classList.add("trip__card"),t.classList.add("trip__card-small"),n.appendChild(t)}e.appendChild(n)},c=async t=>{const e=await(async t=>{t||alert("You must enter a city");const e=`https://secure.geonames.org/searchJSON?formatted=true&q=${t}&username=hardik100`;try{return(await fetch(e)).json()}catch(t){console.error(t)}})(t);if(!e.totalResultsCount)return alert("Please enter a valid city!");let[n,a]=await Promise.all([r(t),o(t)]);return a.totalHits||(a=await o(e.geonames[0].countryName)),{geoData:e,weatherData:n,imagesData:a}},d=t=>{localStorage.removeItem("trips"),localStorage.setItem("trips",JSON.stringify(t))},u=()=>JSON.parse(localStorage.getItem("trips")),l=()=>{const{startDate:t,endDate:e}=i(),n=new Date(t),a=new Date(e);return Math.ceil(Math.abs(a-n)/864e5)};let p={};const m=async t=>{t.preventDefault();const{city:e,startDate:n,endDate:a}=i(),{geoData:r,weatherData:o,imagesData:s}=await c(e);p=((t,e,n)=>({city:t.geonames[0].toponymName,country:t.geonames[0].countryName,countryCode:t.geonames[0].countryCode,lat:t.geonames[0].lat,lng:t.geonames[0].lng,population:t.geonames[0].population,weather:e.data[0].weather,weather:{...e.data[0].weather,temp:e.data[0].temp},imageURL:n.hits[0].largeImageURL,startDate:i().startDate,endDate:i().endDate,duration:l()}))(r,o,s),(t=>{document.getElementById("new-trip").style.display="flex";const e=document.getElementById("new-trip__container");e.textContent="";const n=document.createElement("div");n.innerHTML=`\n          <div class="trip-image__container">\n            <img class="trip-image" src="${t.imageURL}" alt="logo">\n          </div>\n          <div class="trip-description__container">\n           <p> <strong>${t.city}</strong>, ${t.country} </p>\n            <p> Trip duration: <strong>${t.duration}</strong> days</p>\n            <p> Departure: <strong>${t.startDate}</strong></p>\n            <p> Return: <strong>${t.endDate}</strong></p>\n          <div class="trip-weather__container">\n            <h2>Weather predictions:</h2>\n                        <img class="weather-icon" src="https://www.weatherbit.io/static/img/icons/${t.weather.icon}.png" alt="weather-icon">\n              ${t.weather.temp.toFixed()} °C, ${t.weather.description}\n          </div>\n          <button class="card-button add-button" onclick="Client.addTrip()">Add trip</button>\n       `,n.classList.add("trip__card"),e.appendChild(n)})(p)},g=async t=>{t.preventDefault();const e=await(async t=>{try{return(await fetch(`${a}/trips/${t}`,{method:"DELETE",headers:{"Content-Type":"application/json"}})).json()}catch(t){console.error(t)}})(t.target.id);d(e),s()},y=async t=>{const e=await(async t=>{try{return(await fetch(a+"/trips",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({trip:t})})).json()}catch(t){console.error(t)}})(p);d(e),s()};(async()=>{document.addEventListener("DOMContentLoaded",(async function(){const t=await(async()=>{try{return(await fetch(a+"/trips")).json()}catch(t){console.error(t)}})();t.length&&(d(t),s())}))})()}]);